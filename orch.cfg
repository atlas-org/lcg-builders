# default starting section
[start]
groups = buildtools, externals

# default group
group = externals

# tags
tags = {CMTCFG}

# default features of a package build
features = tarball dumpenv patch autoconf

# where tarballs or other source packages get downloaded
download_dir = downloads

# top directory holding unpacked source directories
source_dir = sources

# top directory where a build occurs
build_dir = builds/{package}-{version}-{CMTCFG}

# Installation area for the package 
install_dir = {INSTALL_AREA}/{package}/{version}/{CMTCFG}

# Depending on the feature, certain variables must be provided
srcpkg_ext = tar.gz
source_unpacked = {package}-{version}
source_package = {source_unpacked}.{srcpkg_ext}

# Some steps MUST have targets defined as they can not be determined

# relative to build_dir
build_target = 

# relative to install_dir
install_target = 



[keytype]
groups = group
packages = package

######## build-tools #######

[group buildtools]
#packages = cmake, gmp, mpfr, mpc, isl, ppl, cloog, gcc
packages = cmake, gmp, mpfr, mpc, isl, cloog
build_target = bin/{package}
install_target = bin/{package}
build_cmd_options = -j8

[package cmake]
#depends = prepare:gcc_install
version = 2.8.8
source_url = http://www.cmake.org/files/v{version_2digit}/{source_package}
unpacked_target = bootstrap
prepare_script = bootstrap
prepare_target = cmake_install.cmake
build_target = bin/cmake
install_target = bin/cmake
export_PATH = prepend:{install_dir}/bin

[package gmp]
version = 5.0.5
source_url = ftp://ftp.gmplib.org/pub/{source_unpacked}/{source_package}
srcpkg_ext = tar.bz2
prepare_script_options = --prefix={install_dir} --enable-cxx
build_target = libgmp.la
install_target = lib/libgmp.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package mpfr]
version = 3.1.2
source_url = http://www.mpfr.org/mpfr-current/{source_package}
srcpkg_ext = tar.bz2
prepare_script_options = --prefix={install_dir} --with-out-java --with-gmp={gmp_install_dir}
depends = prepare:gmp_install
build_target = src/libmpfr.la
install_target = lib/libmpfr.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package mpc]
version = 0.9
source_url = http://www.multiprecision.org/mpc/download/{source_package}
prepare_script_options = --prefix={install_dir} --with-gmp={gmp_install_dir} --with-mpfr={mpfr_install_dir}
depends = prepare:gmp_install, prepare:mpfr_install
build_target = src/libmpc.la
install_target = lib/libmpc.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package isl]
version = 0.11.1
#source_url = http://cern.ch/mana-fwk/downloads/ext/{source_package}
source_url = ftp://gcc.gnu.org/pub/gcc/infrastructure/{source_package}
srcpkg_ext = tar.bz2
prepare_script_options = --prefix={install_dir} --with-gmp-prefix={gmp_install_dir}
depends = prepare:gmp_install
build_target = libisl.la
install_target = lib/libisl.la
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package cloog]
version = 0.18.0
#source_url = http://cern.ch/mana-fwk/downloads/ext/{source_package}
source_url = ftp://gcc.gnu.org/pub/gcc/infrastructure/{source_package}
#prepare_script_options = --prefix={install_dir} --with-gmp-prefix={gmp_install_dir} --with-ppl={ppl_install_dir} 
prepare_script_options = --prefix={install_dir} --with-gmp-prefix={gmp_install_dir} --with-bits=gmp
#depends = prepare:gmp_install, prepare:ppl_install, prepare:isl_install
depends = prepare:gmp_install, prepare:isl_install
build_target = cloog
install_target = bin/cloog
export_PATH = prepend:{install_dir}/bin
export_LD_LIBRARY_PATH = prepend:{install_dir}/lib

[package gcc]
version = 4.8.1
source_url = ftp://gcc.gnu.org/pub/gcc/releases/{package}-{version}/{package}-{version}.{srcpkg_ext}
srcpkg_ext = tar.bz2
#prepare_script_options = --prefix={install_dir} --with-mpc={mpc_install_dir} --with-gmp={gmp_install_dir} --with-mpfr={mpfr_install_dir} --with-ppl={ppl_install_dir} --with-cloog={cloog_install_dir} --enable-cloog-backend=isl --with-gnu-as --with-gnu-ld --disable-libgc
prepare_script_options = --prefix={install_dir} --with-mpc={mpc_install_dir} --with-gmp={gmp_install_dir} --with-mpfr={mpfr_install_dir} --with-cloog={cloog_install_dir} --enable-cloog-backend=isl --with-gnu-as --with-gnu-ld --disable-libgc
#depends = prepare:gmp_install, prepare:mpc_install, prepare:mpfr_install, prepare:ppl_install, prepare:cloog_install
depends = prepare:gmp_install, prepare:mpc_install, prepare:mpfr_install, prepare:cloog_install
buildenv_LD_LIBRARY_PATH = prepend:{isl_install_dir}/lib:{mpfr_install}/lib:{gmp_install}/lib
buildenv_LIBRARY_PATH = set:/usr/lib/{gcc_multiarch}
buildenv_C_INCLUDE_PATH = set:/usr/include/{gcc_multiarch}
buildenv_CPLUS_INCLUDE_PATH = set:/usr/include/{gcc_multiarch}
buildenv_CPATH = set:/usr/include/{gcc_multiarch}

### externals ###
[group externals]
#packages = libsigcpp, libxml2, python, sqlite, tbb, root, geant, xerces-c, cry, genie, lhapdf, mysql, postgresql, pythia, log4cpp
#packages = libsigcpp, libxml2, python, sqlite, tbb, xrootd, root, xerces-c, gccxml
packages = libxml2, python, sqlite, xrootd, root

# artificially require any environment variables defined by package or
# groups of packages.
environment = group:buildtools
#depends = prepare:gcc_install

build_cmd_options = -j8

[package libsigcpp]
version = 2.2.10
source_unpacked = libsigc++-{version}
source_package = {source_unpacked}.tar.bz2
source_url = http://ftp.gnome.org/pub/GNOME/sources/libsigc++/{version_2digit}/{source_package}
build_target = sigc++/signal.lo
install_target = lib/pkgconfig


[package libxml2]
version = 2.8.0
source_url = ftp://xmlsoft.org/{package}/{source_package}
build_target = libxml2.la
install_target = lib/libxml2.a

[package python]
depends = prepare:sqlite_install
version = 2.7.3
source_unpacked = Python-{version}
source_package = {source_unpacked}.tgz
source_url = http://www.python.org/ftp/{package}/{version}/{source_package}
build_target = python
install_target = bin/python

[package sqlite]
version = 3.7.17
source_url = http://www.sqlite.org/2013/{package}-autoconf-3071700.tar.gz
source_unpacked = {package}-autoconf-3071700
build_target = sqlite3
install_target = bin/sqlite3

[package tbb]
version = 41_20130314oss

[package xrootd]
depends = prepare:cmake_install
version = 3.3.3
source_url = http://xrootd.slac.stanford.edu/download/v{version}/{source_package}
source_url_checksum = md5:8c2a2d66a684a8f4395c02ae249f5706
source_package = {source_unpacked}.tar.gz
prepare_script = {cmake_install_dir}/bin/cmake
prepare_script_options = {source_dir}/{source_unpacked} -DCMAKE_INSTALL_PREFIX={install_dir}
build_target = xrootd
install_target = bin/xrcp

[package root]
version = 5.34.09
depends = prepare:xrootd_install, prepare:python_install
source_url = ftp://root.cern.ch/{package}/{source_package}
source_package = {package}_v{version}.source.tar.gz
source_unpacked = {package}
build_target = root
install_target = bin/root.exe

[package geant]
version = 4.9.6.p01

[package xerces-c]
version = 3.1.1

[package cry]
version = 1.7

[package genie]
version = 2.8.0

[package lhapdf]
version = 5.8.8

[package mysql]
version = 5.5.32

[package postgresql]
version = 9.1.5

[package pythia]
version = 6

[package log4cpp]
version = 1.1

# [package gccxmlaa]
# version = 20130222a
# source_url = http://cern.ch/mana-fwk/downloads/ext/{package}-{version}.tar.gz
# build_target = gccxml
# install_target = bin/gccxml


